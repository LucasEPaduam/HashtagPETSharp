<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_Inicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>