<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_Inicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>